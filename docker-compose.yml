version: '3.8'

services:
  app:
    build: .
    container_name: banking-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=mysql-db
      - DB_PORT=3306
      - DB_NAME=Transfers_db
      - DB_USER=root
      - DB_PASSWORD=Ilovecameroon99
      - DB_CONNECTION_LIMIT=20
      # Auth & CORS
      - JWT_ACCESS_SECRET=changeme_access_secret
      - JWT_REFRESH_SECRET=changeme_refresh_secret
      - ACCESS_TOKEN_EXPIRES=15m
      - REFRESH_TOKEN_EXPIRES=7d
      - CORS_ORIGIN=http://localhost:3000
      - COOKIE_SECURE=false
      - COOKIE_SAME_SITE=Lax
      - SUPER_ADMIN_EMAIL=admin@afgbank.cm
      - SUPER_ADMIN_PASSWORD=ChangeMe!123
      - SUPER_ADMIN_NAME=Super Admin
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - banking-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - uploads:/usr/src/app/uploads
      - reports:/usr/src/app/reports
    user: "1000:1000"  # Run as current host user to avoid permission issues
    healthcheck:
      test: ["CMD", "node", "-e", "require('axios').get('http://localhost:5000/api/health').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Ilovecameroon99
      MYSQL_DATABASE: Transfers_db
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - banking-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  banking-network:
    driver: bridge

volumes:
  mysql-data:
  uploads:
  reports:
